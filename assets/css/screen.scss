---
---

/* Screen CSS */

/* Minified Eric Meyer reset CSS; see css/_reset.css */
/* stylelint-disable*/
a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,main,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}html{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:'';content:none}table{border-collapse:collapse;border-spacing:0}
/* stylelint-enable*/

/*
  End reset CSS.

  Write custom styles in the appropriate sections below (BASE, LAYOUT, MODULAR, and
  STATE), whose labels are derived from the book Scalable and Modular Architecture for CSS
  (SMACSS) by Jonathan Snook. See https://smacss.com/
*/

/* ===== BASE STYLES ============ */
/* Primarily element selectors for content: headings, paragraphs, lists, and media */

/* Optimal Typographic Rendering */
html {
  text-rendering: optimizeLegibility;
  -webkit-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  text-size-adjust: 100%;
  background: #353b41;
  color: #f8f8f2;
  font-family: "Aptifer Slab W04";
  font-size: 18px;
  line-height: 24px;
  padding: 24px;
}

a {
  color: #ffa04d; /* orange */
  color: #ffc475; /* rev desat orange */
  color: #ff9200; /* rev sat orange */

  text-decoration: none;
}
/*
nav {
  background: darken(#353b41, 12%);
}
*/
nav a {
  color: #ff609d; /* pink*/
  color: #de01e6; /* rev sat pink */
  color: #e069e5; /* rev desat pink */
  color: #ff3d3d; /* rev base red */
  color: #ff7575; /* rev desat red */
}
footer a {
  color: #80c2ff; /* blue */
  color: #0f88e5; /* rev sat blue */
  color: #71b2e4; /* rev desat blue */

}
h1 {
   font-size: 27px;
   line-height: 36px;
   color: #999;
}
h1 a {
  color: #ff609d; /* pink*/
  color: #80c2ff; /* blue */
  color: #c1ce67; /* green */
  color: #d4fd00; /* rev sat green */
  color: #e7fd74; /* rev desat green */
}
nav,
footer,
.tagline {
  font-family: "Aptifer Sans W04";
}
.tagline {
  position: absolute;
  left: -10000px;
}
.home .tagline {
  position: static;
}
/* Responsive Media */
audio,
img,
video {
  display: block;
  max-width: 100%;
}
picture img {
  width: 100%;
}

/* Typical bold and italic styles */
b,
strong {
  font-weight: bold;
}
i,
em,
cite {
  font-style: italic;
}

/* ===== LAYOUT STYLES ========== */
/* Primarily ID selectors for positioning sectioning elements */




/* ===== MODULAR STYLES ========= */
/* Primarily class selectors for styling unique page components  */
#navigation .accessibility {
  /* Accessibly hide the accessibility components of the navigation */
  position: absolute;
  left: -10000px;
}



/* ===== STATE STYLES =========== */
/*
  Media queries. Also class selectors from JavaScript, including feature detection.
  JavaScript-dependent styles can be prefixed with the .hasjs class added in by the
  `js/site.js` file.
*/
.print {
  display: none;
}

/* Prism.js Syntax Highlighter */
/* http://prismjs.com/download.html?themes=prism-okaidia&languages=markup+css+clike+javascript+bash+ruby+haml+json+markdown+scss */
/**
 * okaidia theme for JavaScript, CSS and HTML
 * Loosely based on Monokai textmate theme by http://www.monokai.nl/
 * @author ocodia
 */

code[class*="language-"],
pre[class*="language-"] {
	color: #f8f8f2;
	background: none;
	text-shadow: 0 1px rgba(0, 0, 0, 0.3);
	font-family: Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace;
	text-align: left;
	white-space: pre;
	word-spacing: normal;
	word-break: normal;
	word-wrap: normal;
	line-height: 1.5;

	-moz-tab-size: 4;
	-o-tab-size: 4;
	tab-size: 4;

	-webkit-hyphens: none;
	-moz-hyphens: none;
	-ms-hyphens: none;
	hyphens: none;
}

/* Code blocks */
pre[class*="language-"] {
	padding: 1em;
	margin: .5em 0;
	overflow: auto;
	border-radius: 0.3em;
}

:not(pre) > code[class*="language-"],
pre[class*="language-"] {
	background: #272822;
}

/* Inline code */
:not(pre) > code[class*="language-"] {
	padding: .1em;
	border-radius: .3em;
	white-space: normal;
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
	color: slategray;
}

.token.punctuation {
	color: #f8f8f2;
}

.namespace {
	opacity: .7;
}

.token.property,
.token.tag,
.token.constant,
.token.symbol,
.token.deleted {
	color: #f92672;
}

.token.boolean,
.token.number {
	color: #ae81ff;
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
	color: #a6e22e;
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string,
.token.variable {
	color: #f8f8f2;
}

.token.atrule,
.token.attr-value,
.token.function {
	color: #e6db74;
}

.token.keyword {
	color: #66d9ef;
}

.token.regex,
.token.important {
	color: #fd971f;
}

.token.important,
.token.bold {
	font-weight: bold;
}
.token.italic {
	font-style: italic;
}

.token.entity {
	cursor: help;
}
